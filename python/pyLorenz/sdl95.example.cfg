
#__________________________________________________
# pyLorenz/
# sdl95.example.cfg
#__________________________________________________
# author        : colonel
# last modified : 2016/11/10
#__________________________________________________
#
# Example of configuration file for a simulation
# of a standard deterministic Lorenz 95 model
#

[dimensions]

    state                      = 40
    observations               = 40

[model]

    class                      = Lorenz95
    f                          = 8.0

[observation-times]

    class                      = Regular
    dt                         = 0.05
    Nt                         = 1000

[output]
    
    directory                  = ./
    modWrite                   = 500
    modPrint                   = 100
    label                      = simulation

[truth]

    class                      = Simulated

    [files]

        buffer_size            = $observation-times.Nt$
        truth                  = truth.bin
        observations           = observations.bin

    [output]

        fields                 = trajectory, observations, time

    [initialisation]

        mean                   = 3.0 * np.ones(40)
        variance               = 1.0
        seed                   = None

    [integration]

        class                  = Deterministic
        step                   = RK4
        dt                     = 0.05
        variance               = 0.0
        seed                   = None

    [observation-operator]

        class                  = ObserveAll
        variance               = 1.0
        seed                   = None

[ETKF]

    filter                     = ETKF

    [output]

        fields                 = analyse_rmse

    [ensemble]

        Ns                     = 20
        inflation              = 1.02

    [linalg]

        rcond                  = 1.0e-15

    [initialisation]

        mean                   = from truth
        variance               = 1.0
        seed                   = None

    [integration]

        class                  = Deterministic
        step                   = from truth
        dt                     = from truth
        variance               = 0.0
        seed                   = None

    [observation-operator]

        class                  = from truth
        variance               = from truth
        seed                   = None

[LETKF]

    filter                     = LETKF

    [output]

        fields                 = analyse_rmse

    [ensemble]

        Ns                     = 10
        inflation              = 1.02

    [localisation]

        taper_function         = Gaspari-Cohn
        radius                 = 5

    [linalg]

        rcond                  = 1.0e-15

    [initialisation]

        mean                   = from truth
        variance               = 1.0
        seed                   = None

    [integration]

        class                  = Deterministic
        step                   = from truth
        dt                     = from truth
        variance               = 0.0
        seed                   = None

    [observation-operator]

        class                  = from truth
        variance               = from truth
        seed                   = None

[ETKF-N-primal]

    filter                     = ETKF-N-primal

    [output]

        fields                 = analyse_rmse

    [ensemble]

        Ns                     = 20
        inflation              = 1.0

    [linalg]

        rcond                  = 1.0e-15

    [initialisation]

        mean                   = from truth
        variance               = 1.0
        seed                   = None

    [integration]

        class                  = Deterministic
        step                   = from truth
        dt                     = from truth
        variance               = 0.0
        seed                   = None

    [observation-operator]

        class                  = from truth
        variance               = from truth
        seed                   = None

    [primal-minimisation]

        epsilon                = ( $ETKF-N-primal.ensemble.Ns$ + 1.0 ) / $ETKF-N-primal.ensemble.Ns$

        [minimiser]

            class              = ScipyVector
            method             = BFGS
            tolerance          = None

            [options]

                maxiter        = 100

[ETKF-N-dual-capped]

    filter                     = ETKF-N-dual

    [output]

        fields                 = analyse_rmse

    [ensemble]

        Ns                     = 20
        inflation              = 1.0

    [linalg]

        rcond                  = 1.0e-15

    [initialisation]

        mean                   = from truth
        variance               = 1.0
        seed                   = None

    [integration]

        class                  = Deterministic
        step                   = from truth
        dt                     = from truth
        variance               = 0.0
        seed                   = None

    [observation-operator]

        class                  = from truth
        variance               = from truth
        seed                   = None

    [dual-minimisation]

        epsilon                = $ETKF-N-dual-capped.ensemble.Ns$ / ( $ETKF-N-dual-capped.ensemble.Ns$ - 1.0 )
        maxZeta                = $ETKF-N-dual-capped.ensemble.Ns$ - 1.0
        order                  = 2

        [minimiser]

            class              = ScipyScalar
            method             = Bounded
            tolerance          = None

            [options]

                maxiter        = 100

[SIR]

    filter                     = SIR

    [output]

        fields                 = analyse_rmse

    [ensemble]

        Ns                     = 400

    [initialisation]

        mean                   = from truth
        variance               = 1.0
        seed                   = None

    [integration]

        class                  = BasicStochastic
        step                   = from truth
        dt                     = from truth
        variance               = from truth
        seed                   = None

    [observation-operator]

        class                  = from truth
        variance               = from truth
        seed                   = None

    [resampling]

        method                 = StochasticUniversal
        seed                   = None

        [trigger]

            class              = CounterOrThreshold
            counter_limit      = 100
            threshold_variable = Neff
            threshold_value    = 0.5

        [regularisation]

            method             = Jitter
            variance           = 5.0

